// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å Telegram API
const TelegramBot = require("node-telegram-bot-api");

// –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞
const BOT_TOKEN = "7226497176:AAEkJcI_B6m37AlexAMueq2-zyL9ygYGQLQ"; // –£–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω

// ID –≥—Ä—É–ø–ø—ã, –∫—É–¥–∞ –±—É–¥—É—Ç –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å—Å—è –¥–∞–Ω–Ω—ã–µ
const GROUP_CHAT_ID = "-4659948787"; // –£–∫–∞–∂–∏—Ç–µ ID –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new TelegramBot(BOT_TOKEN, { polling: true });

// –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const userState = {};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ @username –∏–ª–∏ ID
function getUserMention(msg) {
  return msg.from.username ? `@${msg.from.username}` : `@id${msg.from.id}`;
}

// –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
const mainMenu = {
  reply_markup: {
    keyboard: [
      [{ text: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚Ü©Ô∏è" }],
    ],
    resize_keyboard: true,
    one_time_keyboard: true,
  },
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "/start" –∏–ª–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚Ü©Ô∏è"
bot.onText(/\/start|–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚Ü©Ô∏è/, (msg) => {
  const chatId = msg.chat.id;

  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  userState[chatId] = { step: "/start", data: {} };

  bot.sendMessage(
    chatId,
    "–ü–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –∑–∞–ø–æ–ª–Ω–∏ –Ω–µ–±–æ–ª—å—à—É—é –∞–Ω–∫–µ—Ç—É. üìÑ –≠—Ç–æ –∑–∞–π–º—ë—Ç –≤—Å–µ–≥–æ –ø–∞—Ä—É –º–∏–Ω—É—Ç –∏ –ø–æ–º–æ–∂–µ—Ç –º–Ω–µ –ø–æ–Ω—è—Ç—å, –ø–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ —Ç–µ–±–µ –ø–æ–∑–∏—Ü–∏—è –∫—É—Ä—å–µ—Ä–∞-–ø–∞—Ä—Ç–Ω—ë—Ä–∞. üö¥ –ü—Ä–æ–¥–æ–ª–∂–∏–º?",
    {
      reply_markup: {
        keyboard: [
          [{ text: "–î–∞" }, { text: "–ù–µ —Ö–æ—á—É –±—ã—Ç—å –∫—É—Ä—å–µ—Ä–æ–º" }],
        ],
        resize_keyboard: true,
        one_time_keyboard: true,
      },
    }
  );
});

// –õ–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤
bot.on("message", (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;
  const userMention = getUserMention(msg);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  if (!userState[chatId]) {
    userState[chatId] = { step: "/start", data: {} };
  }

  const state = userState[chatId];

  switch (state.step) {
    case "/start":
      if (text === "–ù–µ —Ö–æ—á—É –±—ã—Ç—å –∫—É—Ä—å–µ—Ä–æ–º") {
        bot.sendMessage(
          chatId,
          "–ë—É–¥—É —Ä–∞–¥, –µ—Å–ª–∏ —Ç—ã –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å. –ú—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å. –Ø –±—É–¥—É –∑–¥–µ—Å—å! üëã",
          mainMenu
        );
        state.step = "/start";
      } else if (text === "–î–∞") {
        bot.sendMessage(chatId, "–ö–∞–∫ —è –º–æ–≥—É –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?");
        state.step = "askName";
      }
      break;

    case "askName":
      state.data.name = text;
      bot.sendMessage(chatId, `–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç, ${text}?`);
      state.step = "askAge";
      break;

    case "askAge":
      if (!/^\d+$/.test(text)) {
        bot.sendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã).");
        return;
      }
      const age = parseInt(text);
      state.data.age = age;

      if (age < 18) {
        bot.sendMessage(
          chatId,
          "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫—É—Ä—å–µ—Ä–æ–º-–ø–∞—Ä—Ç–Ω—ë—Ä–æ–º –°–∞–º–æ–∫–∞—Ç–∞ –º–æ–∂–Ω–æ —Å—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å 18 –ª–µ—Ç. ü•∫\n\n–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚Ü©Ô∏è",
          mainMenu
        );
        state.step = "/start";
      } else {
        bot.sendMessage(chatId, "–ö–∞–∫–æ–µ —É —Ç–µ–±—è –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ?", {
          reply_markup: {
            keyboard: [
              [{ text: "–†–§ üá∑üá∫" }, { text: "–î—Ä—É–≥–∏–µ —Å—Ç—Ä–∞–Ω—ã üáßüáæüáπüáØüá∫üáøüá∞üá¨‚Ä¶" }],
            ],
            resize_keyboard: true,
            one_time_keyboard: true,
          },
        });
        state.step = "askCitizenship";
      }
      break;

    case "askCitizenship":
      state.data.citizenship = text;
      bot.sendMessage(chatId, "–£–º–µ–µ—à—å –∫–∞—Ç–∞—Ç—å—Å—è –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ? üö¥", {
        reply_markup: {
          keyboard: [
            [{ text: "–î–∞" }, { text: "–ù–µ—Ç" }],
          ],
          resize_keyboard: true,
          one_time_keyboard: true,
        },
      });
      state.step = "askBike";
      break;

    case "askBike":
      state.data.bike = text;
      if (text === "–ù–µ—Ç") {
        bot.sendMessage(
          chatId,
          "–ò–Ω–æ–≥–¥–∞ –µ—Å—Ç—å –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –≤ –ø–µ—à–∏—Ö –∫—É—Ä—å–µ—Ä–∞—Ö. –ï—Å–ª–∏ —Ç–µ–±–µ —ç—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –ø—Ä–æ–¥–æ–ª–∂–∏–º? ‚úÖ",
          {
            reply_markup: {
              keyboard: [
                [{ text: "–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º" }, { text: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚Ü©Ô∏è" }],
              ],
              resize_keyboard: true,
              one_time_keyboard: true,
            },
          }
        );
        state.step = "askContinue";
      } else {
        bot.sendMessage(
          chatId,
          "–ò–Ω–æ–≥–¥–∞ –∑–∞–∫–∞–∑, –∫–æ—Ç–æ—Ä—ã–π –≤–µ–∑—ë—Ç –∫—É—Ä—å–µ—Ä, –º–æ–∂–µ—Ç –≤–µ—Å–∏—Ç—å 15-20 –∫–≥. –°–ø—Ä–∞–≤–∏—à—å—Å—è? üèãÔ∏è",
          {
            reply_markup: {
              keyboard: [
                [{ text: "–ö–æ–Ω–µ—á–Ω–æ" }, { text: "–ù–µ –¥—É–º–∞—é" }],
              ],
              resize_keyboard: true,
              one_time_keyboard: true,
            },
          }
        );
        state.step = "askWeight";
      }
      break;

    case "askContinue":
      if (text === "–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º") {
        bot.sendMessage(chatId, "–ò–Ω–æ–≥–¥–∞ –∑–∞–∫–∞–∑, –∫–æ—Ç–æ—Ä—ã–π –≤–µ–∑—ë—Ç –∫—É—Ä—å–µ—Ä, –º–æ–∂–µ—Ç –≤–µ—Å–∏—Ç—å 15-20 –∫–≥. –°–ø—Ä–∞–≤–∏—à—å—Å—è? üèãÔ∏è", {
          reply_markup: {
            keyboard: [
              [{ text: "–ö–æ–Ω–µ—á–Ω–æ" }, { text: "–ù–µ –¥—É–º–∞—é" }],
            ],
            resize_keyboard: true,
            one_time_keyboard: true,
          },
        });
        state.step = "askWeight";
      } else {
        bot.sendMessage(chatId, "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –Ω–∞—á–∞–ª–æ!", mainMenu);
        state.step = "/start";
      }
      break;

      case "askWeight":
    state.data.weight = text;
    if (text === "–ù–µ –¥—É–º–∞—é") {
      bot.sendMessage(
        chatId,
        "–ü–æ–Ω—è–ª! –ë—É–¥—É —Ä–∞–¥ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è —Å–Ω–æ–≤–∞, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å. üëã",
        mainMenu
      );
      state.step = "/start";
    } else {
      bot.sendMessage(
        chatId,
        "–û—Ç–ª–∏—á–Ω–æ! –î—É–º–∞—é, —Ç—ã –ø–æ–¥—Ö–æ–¥–∏—à—å! üî•\n\n–¢–µ–ø–µ—Ä—å –æ—Å—Ç–∞–≤—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —á—Ç–æ–±—ã HR-–º–µ–Ω–µ–¥–∂–µ—Ä –º–æ–≥ —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–æ–±–æ–π. üìû\n\n–û–Ω –ø–æ–º–æ–∂–µ—Ç –ø–æ–¥–æ–±—Ä–∞—Ç—å –¥–ª—è —Ç–µ–±—è —É–¥–æ–±–Ω—ã–π —Ü–µ–Ω—Ç—Ä —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤, —Ä–∞—Å—Å–∫–∞–∂–µ—Ç, —á—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ, –∏ –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã.\n\n–ù–µ –≤–æ–ª–Ω—É–π—Å—è, —è –Ω–µ —Ö—Ä–∞–Ω—é –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞—é –∏—Ö —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º. üîê",
        {
          reply_markup: {
            force_reply: true,
          },
        }
      );
      state.step = "askPhone";
    }
    break;


    case "askPhone":
      state.data.phone = text;
      const userInfo = `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n–ò–º—è: ${state.data.name}\n–í–æ–∑—Ä–∞—Å—Ç: ${state.data.age}\n–ì—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ: ${state.data.citizenship}\n–í–µ–ª–æ—Å–∏–ø–µ–¥: ${state.data.bike}\n–í–µ—Å –∑–∞–∫–∞–∑–æ–≤: ${state.data.weight || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}\n–¢–µ–ª–µ—Ñ–æ–Ω: ${state.data.phone}\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userMention}`;
      bot.sendMessage(GROUP_CHAT_ID, userInfo);
      bot.sendMessage(
        chatId,
        "–°–ø–∞—Å–∏–±–æ! HR-–º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å —Ç–æ–±–æ–π –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. ‚úÖ\n\n–ó–∞—è–≤–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 12:00 –¥–æ 19:00. üïê",
        mainMenu
      );
      state.step = "/start";
      break;

    default:
      bot.sendMessage(chatId, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Å–Ω–∞—á–∞–ª–∞.", mainMenu);
      state.step = "/start";
      break;
  }
});
